% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/staged-workflow.R
\name{add_stage_model}
\alias{add_stage_model}
\title{Add a stage-specific model to a \code{staged_workflow}}
\usage{
add_stage_model(x, wflow, stage = NULL, stages = NULL)
}
\arguments{
\item{x}{A \code{staged_workflow} object.}

\item{wflow}{A \code{tidymodels} \code{workflow} or a \code{causal_workflow} object to be
assigned to the stage(s).}

\item{stage}{An integer specifying a single stage.}

\item{stages}{An integer vector specifying multiple stages.}
}
\value{
An updated \code{staged_workflow} object.
}
\description{
This verb assigns a \code{tidymodels} workflow to one or more stages in a
\code{staged_workflow} object.
}
\details{
Use either the \code{stage} or \code{stages} argument to specify the assignment. If a
workflow is already present for a given stage, it will be overwritten.

When a \link{causal_workflow} is provided, the fitting process for that stage
will use the multi-component estimation procedure defined by Phase 1.
When a standard \link[workflows:workflow]{workflows::workflow} is provided, the fitting process will use the
single-model Q-learning procedure from Phase 2.
}
\examples{
\dontrun{
library(parsnip)
library(recipes)
library(workflows)

# A different model for each stage
stage_2_wflow <- workflow() |>
  add_model(linear_reg()) |>
  add_formula(outcome ~ covar1 + covar2 + action)

stage_1_wflow <- workflow() |>
  add_model(rand_forest() |> set_engine("ranger")) |>
  add_formula(outcome ~ covar1 + covar2 + action)

q_spec <- staged_workflow() |>
  add_stage_model(stage_2_wflow, stage = 2) |>
  add_stage_model(stage_1_wflow, stage = 1)

# The same model for all stages
general_wflow <- workflow() |>
  add_model(linear_reg()) |>
  add_formula(outcome ~ covar1 + covar2 + action)

q_spec_2 <- staged_workflow() |>
  add_stage_model(general_wflow, stages = 1:2)
}
}
