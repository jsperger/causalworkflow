% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit-staged-workflow.R
\name{fit.staged_workflow}
\alias{fit.staged_workflow}
\title{Fit a \code{staged_workflow}}
\usage{
\method{fit}{staged_workflow}(object, data, ..., discount = 1, control = control_fit())
}
\arguments{
\item{object}{A \code{\link[=staged_workflow]{staged_workflow()}} object.}

\item{data}{A data frame containing all necessary variables for all stages.}

\item{...}{Not used.}

\item{discount}{A numeric value between 0 and 1 for discounting future
outcomes. Defaults to 1 (no discounting).}

\item{control}{A \code{control_fit} object to manage the fitting process.}
}
\value{
A \code{fitted_staged_workflow} object containing the ordered list of all
fitted stage models.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function fits the sequence of models defined in a \code{\link[=staged_workflow]{staged_workflow()}}
object using a backwards recursive algorithm. It serves as a wrapper around
the core \code{fit_recursive()} engine.
}
\details{
The fitting process proceeds in reverse order of the stages (\code{K} down to \code{1}).
For any stage \code{k < K}, the model is fit to a "pseudo-outcome" calculated from
the predictions of the model at stage \code{k+1}. See \code{\link[=fit_recursive]{fit_recursive()}} for more
details on the underlying mechanism.
}
