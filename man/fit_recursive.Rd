% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit-recursive.R
\name{fit_recursive}
\alias{fit_recursive}
\title{Fit a staged workflow using a recursive engine}
\usage{
fit_recursive(
  object,
  data,
  ...,
  discount = 1,
  control = control_fit(),
  single_stage = FALSE
)
}
\arguments{
\item{object}{A \code{staged_workflow} or \code{fitted_staged_workflow} object.}

\item{data}{A data frame containing all necessary variables for all stages.}

\item{...}{Not used.}

\item{discount}{A numeric value between 0 and 1 for discounting future
outcomes.}

\item{control}{A control object to manage the fitting process.}

\item{single_stage}{A logical indicating whether to fit only the next
stage in the sequence.}
}
\value{
A \code{fitted_staged_workflow} object.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This is the core, internal recursive engine for fitting \code{staged_workflow}
objects. It is designed to be called by user-facing \code{fit()} methods like
\code{fit.staged_workflow()} and \code{fit_next_stage()}.

The engine works backwards from the last stage to the first. It can handle
both full fitting processes (from stage \code{K} to \code{1}) and partial fits
(resuming from an intermediate stage \code{k}).
}
\keyword{internal}
